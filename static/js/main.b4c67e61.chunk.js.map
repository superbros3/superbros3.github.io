{"version":3,"sources":["components/Header/Header.js","components/MainNav.js","components/Pagination/CustomPagination.js","components/SingleContent/SingleContent.js","Pages/Series/Series.js","Pages/Search/Search.js","Pages/Playit/Playit.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","onClick","window","scroll","className","useStyles","makeStyles","root","width","position","bottom","backgroundColor","zIndex","SimpleBottomNavigation","classes","React","useState","value","setValue","history","useHistory","useEffect","push","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","style","color","label","icon","Videocam","darkTheme","createMuiTheme","palette","type","CustomPagination","setPage","numOfPages","display","justifyContent","marginTop","ThemeProvider","theme","Pagination","e","page","target","textContent","count","SingleContent","id","poster","title","date","media_type","vote_average","url","duration","backurl","cursor","pathname","state","Badge","badgeContent","src","alt","Series","content","setContent","setNumOfPages","cdn","setCdn","setGoogldId","fetchSeries","a","pageFormatNum","String","padStart","axios","get","data","console","log","process","then","res","google_statistics_id","map","c","slug","cover","Date","update_at","toLocaleDateString","Search","searchText","setSearchText","primary","main","fetchSearch","TextField","flex","variant","Button","marginLeft","fontSize","Playit","useLocation","to","height","controls","config","file","forceHLS","App","Container","path","component","exact","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","require","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b4c67e61.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <span onClick={() => window.scroll(0, 0)} className=\"header\">\n      🎬 网站 🎥\n    </span>\n  );\n};\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Videocam } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n    backgroundColor: \"#2d313a\",\n    zIndex: 100,\n  },\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (value === 0) {\n      history.push(\"/series\");\n    } else if (value === 1) {\n      history.push(\"/search\");\n    }\n  }, [value, history]);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label=\"视频\"\n        icon={<Videocam />}\n      />\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label=\"搜一搜\"\n        icon={<SearchIcon />}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nexport default function CustomPagination({ setPage, numOfPages = 10 }) {\n  // Scroll to top when page changes\n  const handlePageChange = (page) => {\n    setPage(page);\n    window.scroll(0, 0);\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: 10,\n      }}\n    >\n      <ThemeProvider theme={darkTheme}>\n        <Pagination\n          onChange={(e) => handlePageChange(e.target.textContent)}\n          count={numOfPages}\n          color=\"primary\"\n        />\n      </ThemeProvider>\n    </div>\n  );\n}\n","import { Badge } from \"@material-ui/core\";\n\nimport \"./SingleContent.css\";\n\nimport { useHistory } from \"react-router\";\n\n\nconst SingleContent = ({\n  id,\n  poster,\n  title,\n  date,\n  media_type,\n  vote_average,\n  duration,\n  url,\n  backurl,\n}) => {\n  const history = useHistory();\n  const handlePlay = () =>{\n    history.push({\n      pathname: \"/play\",\n      state: {\"url\": url, \"backurl\": backurl}\n    });\n  };\n  return (\n    <div\n        className=\"media\"\n        style={{ cursor: \"pointer\" }}\n        color=\"inherit\"\n        onClick={handlePlay}\n      >\n      <Badge\n        badgeContent={vote_average}\n        color={vote_average > 6 ? \"primary\" : \"secondary\"}\n      />\n      <img\n        className=\"poster\"\n        src={poster}\n        alt={title}\n      />\n      <b className=\"title\">{title}</b>\n      <span className=\"subTitle\">\n        {media_type === \"video\" ? \"Video\" : \"Movie\"}\n        <span className=\"subTitle\">{date}</span>\n      </span>\n    </div>\n  );\n};\n\nexport default SingleContent;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n\nconst Series = () => {\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const [cdn, setCdn] = useState('');\n  const [googleId, setGoogldId] = useState('');\n\n  const fetchSeries = async () => {\n    const pageFormatNum = String(page-1).padStart(3, '0');\n    if (cdn !== '') {\n      try {\n        const {data} = await axios.get(\n          `${cdn}page-${pageFormatNum}.json`\n        );\n        setContent(data);\n        setNumOfPages(2);\n      } catch(err) {\n        setContent([]);\n        console.log(err);\n      }\n      \n    } else {\n      await axios.get(\n        process.env.REACT_APP_CONFIG_URL\n      ).then( async function(res) {\n        setCdn(res.data.cdn);\n        setGoogldId(res.data.google_statistics_id);\n        try {\n          const { data } = await axios.get(\n            `${res.data.cdn}page-${pageFormatNum}.json`\n          );\n          setContent(data);\n          setNumOfPages(2);\n        }catch(err) {\n          setContent([]);\n          console.log(err);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSeries();\n    // eslint-disable-next-line\n  }, [page]);\n\n  return (\n    <div>\n      <span className=\"pageTitle\">发现视频</span>\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.slug}\n              id={c.slug}\n              poster={c.cover}\n              title={c.title}\n              date={new Date(c.update_at).toLocaleDateString()}\n              media_type=\"video\"\n              vote_average='9.0'\n              duration={c.duration}\n              url={c.url}\n              backurl=\"/series\"\n            />\n          ))}\n      </div>\n      {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\n\nexport default Series;\n","import {\n  Button,\n  createMuiTheme,\n  TextField,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport \"./Search.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n\nconst Search = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const [cdn, setCdn] = useState('');\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\",\n      },\n    },\n  });\n\n  const fetchSearch = async () => {\n    if (cdn !== '') {\n      try {\n        const {data} = await axios.get(\n          `${cdn}search.json`\n        );\n        setContent(data);\n        setNumOfPages(2);\n      } catch(err) {\n        setContent([]);\n        console.log(err);\n      }\n      \n    } else {\n      await axios.get(\n        process.env.REACT_APP_CONFIG_URL\n      ).then( async function(res) {\n        setCdn(res.data.cdn);\n        try {\n          const { data } = await axios.get(\n            `${res.data.cdn}search.json`\n          );\n          setContent(data);\n          setNumOfPages(2);\n        }catch(err) {\n          setContent([]);\n          console.log(err);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSearch();\n    // eslint-disable-next-line\n  }, [page]);\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"search\">\n          <TextField\n            style={{ flex: 1 }}\n            className=\"searchBox\"\n            label=\"Search\"\n            variant=\"filled\"\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n          <Button\n            onClick={fetchSearch}\n            variant=\"contained\"\n            style={{ marginLeft: 10 }}\n          >\n            <SearchIcon fontSize=\"large\" />\n          </Button>\n        </div>\n      </ThemeProvider>\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.slug}\n              id={c.slug}\n              poster={c.cover}\n              title={c.title}\n              date={new Date(c.update_at).toLocaleDateString()}\n              media_type=\"video\"\n              vote_average='9.0'\n              duration={c.duration}\n              url={c.url}\n              backurl=\"/search\"\n            />\n          ))}\n        {searchText &&\n          !content &&\n          ('No Videos Found')}\n      </div>\n      {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\"\nimport ReactPlayer from \"react-player\"\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./Playit.css\"\n\nconst Playit = () => {\n    const location = useLocation();\n    const url = location.state.url;\n    return (\n        <div className=\"playerContent\">\n            <div className=\"buttonLine\">\n                <Link to={{pathname:\"/series\"}}>&lt;&lt;返回</Link>\n            </div>\n            <ReactPlayer\n            className=\"react-player\"\n            url={url}\n            width='100%'\n            height='100%'\n            controls={true}\n            config={{\n                file: {\n                    forceHLS:true\n                }\n            }}\n            />\n        </div>\n    );\n};\n\nexport default Playit;","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport SimpleBottomNavigation from \"./components/MainNav\";\nimport Series from \"./Pages/Series/Series\";\nimport Search from \"./Pages/Search/Search\";\nimport { Container } from \"@material-ui/core\";\nimport Playit from \"./Pages/Playit/Playit\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className=\"app\">\n        <Container>\n          <Switch>\n            <Route path=\"/series\" component={Series} exact />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/play\" component={Playit} />\n          </Switch>\n        </Container>\n      </div>\n      <SimpleBottomNavigation />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}