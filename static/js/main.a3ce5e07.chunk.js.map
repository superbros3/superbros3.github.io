{"version":3,"sources":["components/Header/Header.js","components/MainNav.js","components/SingleContent/SingleContent.js","Pages/Playit/Playit.jsx","components/MySearchBar/MySearchBar.jsx","Pages/Home/Home.jsx","Pages/Mypage/Mypage.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","location","useLocation","onClick","window","scroll","className","href","src","alt","pathname","to","useStyles","makeStyles","root","width","position","bottom","backgroundColor","zIndex","topBtn","height","right","color","borderRadius","cursor","SimpleBottomNavigation","classes","React","useState","value","setValue","history","useHistory","useEffect","push","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","style","label","icon","Videocam","SingleContent","slug","poster","title","date","duration","url","formatedDuration","theTime","parseInt","theTime1","theTime2","result","formatSeconds","ndate","Date","dateStr","getFullYear","String","getMonth","padStart","getDate","titleFormat","length","substring","videoData","videoHis","localStorage","getItem","JSON","parse","find","element","unshift","console","log","setItem","stringify","state","Playit","like","setLike","page0","setPage0","count","encodeURI","replace","c","charCodeAt","toString","isSafari","test","navigator","userAgent","getLike","a","likeIndexes","Set","size","add","Math","floor","random","nlikeArr","forEach","axios","get","process","data","controls","playsinline","light","playing","config","file","forceHLS","forceVideo","map","cover","update_at","MySearchBar","setSearchText","searchAction","darkTheme","createMuiTheme","palette","type","primary","main","ThemeProvider","theme","TextField","flex","variant","e","target","Button","marginLeft","fontSize","Home","hasMore","setHasMore","content","setContent","cdn","setCdn","page","setPage","sourcePage","setSourcePage","source","setSource","searchText","db","setDb","manual","setManual","perPage","changePage","tmpContent","i","min","resHash","sha1","concat","tmpSourcePage","newSource","slice","newData","then","res","Fuse","shouldSort","matchAllTokens","findAllMatches","includeScore","threshold","distance","maxPatternLength","minMatchCharLength","catch","err","betterSearchText","tmpResult","search","item","dataLength","next","loader","endMessage","overflowX","Mypage","videoHistory","App","Container","path","component","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","require","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a3ce5e07.chunk.js","sourcesContent":["import \"./Header.css\";\nimport {Link, useLocation} from \"react-router-dom\";\n\nconst Header = () => {\n  const location = useLocation();\n  return (\n    <span onClick={() => window.scroll(0, 0)} className=\"header\">\n      <a href=\"/\" ><img src=\"/logo.png\" alt=\"logo\" className=\"headerLogo\" /></a>\n      { location.pathname===\"/play\" ? <Link to=\"/\" className=\"topBarRightLink\">站点首页</Link> : null }\n    </span>\n  );\n};\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { Videocam } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n    backgroundColor: \"#2d313a\",\n    zIndex: 100,\n  },\n  topBtn: {\n    width: \"50px !important\",\n    height: \"50px !important\",\n    position: \"fixed\",\n    bottom: \"80px\",\n    right: \"10px\",\n    backgroundColor: \"blue\",\n    zIndex: 100,\n    color: \"white\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n  }\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (value === 0) {\n      history.push(\"/\");\n      window.scroll(0, 0);\n    } else if (value === 1) {\n      history.push(\"/mine\");\n    }\n  }, [value, history]);\n\n  return (\n    <>\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label=\"视频\"\n        icon={<Videocam />}\n      />\n      <BottomNavigationAction\n        style={{ color: \"white\"}}\n        label=\"我的\"\n        icon={<AccountCircleIcon />}\n      />\n    </BottomNavigation>\n    \n      </>\n  );\n}\n","// import { Badge } from \"@material-ui/core\";\n\nimport \"./SingleContent.css\";\n\nimport { useHistory } from \"react-router\";\nimport localStorage from \"localStorage\";\n\n\nconst SingleContent = ({\n  slug,\n  poster,\n  title,\n  date,\n  duration,\n  url,\n}) => {\n  const history = useHistory();\n  // const handlePlay = () =>{\n  //   history.push({\n  //     pathname: \"/play\",\n  //     state: {\"url\": url, \"backurl\": backurl, \"title\": title, }\n  //   });\n  // };\n  function formatSeconds(value) {\n    var theTime = parseInt(value);// 秒\n    var theTime1 = 0;// 分\n    var theTime2 = 0;// 小时\n    if (theTime > 60) {\n        theTime1 = parseInt(theTime / 60);\n        theTime = parseInt(theTime % 60);\n        if (theTime1 > 60) {\n            theTime2 = parseInt(theTime1 / 60);\n            theTime1 = parseInt(theTime1 % 60);\n        }\n    }\n \n    var result = \"\" + parseInt(theTime);//秒\n    if (10 > theTime > 0) {\n        result = \"0\" + parseInt(theTime);//秒\n    } else {\n        result = \"\" + parseInt(theTime);//秒\n    }\n \n    if (10 > theTime1 > 0) {\n        result = \"0\" + parseInt(theTime1) + \":\" + result;//分，不足两位数，首位补充0，\n    } else {\n        result = \"\" + parseInt(theTime1) + \":\" + result;//分\n    }\n    if (theTime2 > 0) {\n        result = \"\" + parseInt(theTime2) + \":\" + result;//时\n    }\n    return result;\n  }\n  const formatedDuration = formatSeconds(duration);\n  const ndate  = new Date(date);\n  // const dateStr = date.getFullYear()+\"-\"+String((date.getMonth()+1)).padStart(2, '0')+ \n  //   \"-\"+String(date.getDate()).padStart(2, '0')+\" \"+String(date.getHours()).padStart(2, '0')+\":\"+\n  //   String(date.getMinutes()).padStart(2, '0')+\":\"+String(date.getSeconds()).padStart(2, '0');\n  const dateStr = ndate.getFullYear()+\"-\"+String((ndate.getMonth()+1)).padStart(2, '0')+ \n    \"-\"+String(ndate.getDate()).padStart(2, '0');\n  const titleFormat = title.length > 20 ? title.substring(0, 20) + '...' : title;\n\n  const handlePlay = () =>{\n    const videoData = {\n      \"poster\": poster,\n      \"title\": title,\n      \"date\": date,\n      \"duration\": duration,\n      \"url\": url,\n      \"slug\": slug,\n    };\n    var videoHis = localStorage.getItem('videoHistory');\n    if (videoHis) {\n      videoHis = JSON.parse(videoHis);\n      const isExist = videoHis.find((element) => {\n        return element.slug === videoData.slug;\n      });\n      if (!isExist) {\n        videoHis.unshift(videoData);\n      }\n    } else {\n      videoHis = [];\n      videoHis.unshift(videoData);\n    }\n\n    console.log(videoHis);\n\n    localStorage.setItem('videoHistory', JSON.stringify(videoHis));\n\n    history.push({\n      pathname: \"/play\",\n\t    state: {'url': url, 'title': title, 'dateStr': dateStr, 'duration': formatedDuration, 'poster': poster},\n    });\n  };\n\n  return (\n    <div\n        className=\"media\"\n        style={{ cursor: \"pointer\" }}\n        color=\"inherit\"\n        onClick={handlePlay}\n      >\n      <div className=\"imageBox\">\n        <img\n          className=\"poster\"\n          src={poster}\n          alt={title}\n        />\n        <span className=\"leftLogo\">X10096</span>\n        <span className=\"rightLogo\">HD</span>\n      </div>\n      <div className=\"videoTimeBox\">\n        <span className=\"videoTime\">{formatedDuration}</span>\n      </div>\n      \n      <b className=\"title\">{titleFormat}</b>\n      <span className=\"subTitle\">\n        <span className=\"subTitle\">添加时间：{dateStr}</span>\n      </span>\n    </div>\n  );\n};\n\nexport default SingleContent;\n","import {React, useState, useEffect} from \"react\"\nimport ReactPlayer from \"react-player\"\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport \"./Playit.css\"\n\nconst Playit = () => {\n    const location = useLocation();\n    const url = location.state.url;\n    const title = location.state.title;\n    const dateStr = location.state.dateStr;\n    const duration = location.state.duration;\n    const [like, setLike] = useState([]);\n    const [page0, setPage0] = useState([]);\n    var i=0;\n    var count = 0;\n    \n    const poster = encodeURI(location.state.poster).replace(/[()]/g, (c) => {\n        return '%'+c.charCodeAt(0).toString(16);\n    });\n\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n\n    const getLike = async () => {\n        try {\n            var likeIndexes = new Set();\n            if (page0.length > 0) {\n                count = 0;\n                while (likeIndexes.size < 6) {\n                    likeIndexes.add(Math.floor(Math.random()*page0.length));\n                    count = count + 1;\n                    if (count > 100) {\n                        break;\n                    }\n                }\n                var nlikeArr = [];\n                likeIndexes.forEach((value)=>{\n                    nlikeArr.push(page0[value]);\n                });\n                \n                setLike(nlikeArr);\n            } else {\n                const {data} = await axios.get(\n                    `${process.env.REACT_APP_TEST_BASEDIR}page-000.json`\n                );\n                if (data.length > 0) {\n                    setPage0(data);\n                    count = 0;\n                    while (likeIndexes.size < 6) {\n                        likeIndexes.add(Math.floor(Math.random()*data.length));\n                        count = count + 1;\n                        if (count > 100) {\n                            break;\n                        }\n                    }\n                    console.log(likeIndexes);\n                    nlikeArr = [];\n                    likeIndexes.forEach((value)=>{\n                        nlikeArr.push(data[value]);\n                    });\n                    setLike(nlikeArr);\n                }\n            }\n            \n        }catch(err) {\n            console.log(err);\n        }\n    };\n\n    useEffect(() => {\n        getLike();\n    }, []);\n\n    window.scroll(0, 0);\n    return (\n        <div className=\"playerContent\">\n           \n            <div className=\"playTitle\">{title}</div>\n            <div className=\"playerBox\">\n                <ReactPlayer\n                className=\"react-player\"\n                url={url}\n                controls={true}\n                playsinline={true}\n                width=\"100%\"\n                height=\"300px\"\n                light={poster}\n                playing={true}\n                config={{\n                    file: {\n                        forceHLS:!isSafari,\n                        forceVideo: true,\n                    }\n                }}\n                />\n                <div className=\"videoInfoLine\">\n                    <span className=\"videoInfoLeft\">添加时间：{dateStr}</span>\n                    <span className=\"videoInfoRight\">影片时长：{duration}</span>\n                </div>\n            </div>\n            <div className=\"likeBoxTitle\">\n                猜你喜欢\n            </div>\n            <hr/>\n            <div className=\"likeBox\">\n                {like.length > 0 && like.map((c) => (\n                    <SingleContent\n                    key={c.slug}\n                    slug={c.slug}\n                    poster={c.cover}\n                    title={c.title}\n                    date={c.update_at}\n                    duration={c.duration}\n                    url={c.url}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Playit;","import \"./mysearchbar.css\"\nimport {\n    Button,\n    TextField,\n    ThemeProvider,\n    createMuiTheme,\n  } from \"@material-ui/core\";\n  import SearchIcon from \"@material-ui/icons/Search\";\n\nexport default function MySearchBar({\n    setSearchText,\n    searchAction,\n}) {\n    const darkTheme = createMuiTheme({\n        palette: {\n            type: \"dark\",\n            primary: {\n                main: \"#fff\",\n            }\n        }\n    });\n\n    return (\n        <ThemeProvider theme={darkTheme}>\n            <div className=\"search\">\n            <TextField\n                style={{ flex: 1 }}\n                className=\"searchBox\"\n                label=\"搜索影片\"\n                variant=\"filled\"\n                size=\"small\"\n                onChange={(e) => setSearchText(e.target.value)}\n            />\n            <Button\n                onClick={searchAction}\n                variant=\"contained\"\n                style={{ marginLeft: 10 }}\n            >\n                <SearchIcon fontSize=\"large\" />\n            </Button>\n            </div>\n        </ThemeProvider>\n        \n    );\n}","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MySearchBar from \"../../components/MySearchBar/MySearchBar\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport \"./home.css\"\nimport Fuse from \"fuse.js\";\nimport sha1 from \"crypto-js/sha1\";\nimport InfiniteScroll from \"react-infinite-scroll-component\"\n\nexport default function Home() {\n    const [hasMore, setHasMore] = useState(true);\n    const [content, setContent] = useState([]);\n    const [cdn, setCdn] = useState();\n    const [page, setPage] = useState();\n    const [sourcePage, setSourcePage] = useState(0);\n    const [source, setSource] = useState([]);\n    const [searchText, setSearchText] = useState();\n    const [db, setDb] = useState();\n    const [manual, setManual] = useState();\n    const perPage = 10;\n\n    const moreContentClick = () => {\n        setPage(page+1);\n    };\n\n    const initConfig = () => {\n        axios.get(\n            `${process.env.REACT_APP_CONFIG_URL}`\n        ).then(function(res) {\n            setCdn(res.data.cdn);\n            axios.get(\n                `${process.env.REACT_APP_TEST_BASEDIR}search.json`\n            ).then(function(res) {\n                var options = {\n                    shouldSort: true,\n                    matchAllTokens: true,\n                    findAllMatches: true,\n                    includeScore: true,\n                    threshold: 0,\n                    location: 0,\n                    distance: 100,\n                    maxPatternLength: 32,\n                    minMatchCharLength: 1,\n                };\n                setDb(new Fuse(res['data']), options);\n                setPage(1);\n                // changePage();\n            }).catch(function(err) {\n                console.log(err);\n            });\n        }).catch(function(err) {\n            console.log(err);\n        });\n    };\n\n    const changePage = async () => {\n        if (cdn) {\n            if (source.length > 0 && typeof source[0] === 'string') {\n                // this is search result.\n                var tmpContent = []\n                for(var i=(page-1)*perPage; i<Math.min(page*perPage, source.length); i++) {\n                    const resHash = sha1(source[i]).toString();\n                    try {\n                        const {data} = await axios.get(\n                            `${process.env.REACT_APP_TEST_BASEDIR}output/${resHash}`\n                        );\n                        tmpContent.push(data);\n                    }catch(err) {\n                        console.log(err);\n                    }\n                }\n                if (tmpContent.length === 0) {\n                    setHasMore(false);\n                } else {\n                    // not duplicate add same page.\n                    if (content.length > 0 && tmpContent.length > 0) {\n                        if (content[content.length-1].slug === tmpContent[tmpContent.length-1].slug) {\n                            return;\n                        }\n                    }\n                    setContent(content.concat(tmpContent));\n                    if (Math.min(page*perPage, source.length) === source.length) {\n                        setHasMore(false);\n                    } else {\n                        setHasMore(true);\n                    }\n                    // setPage(page+1);\n                }\n                \n            } else {\n                if (page * perPage > source.length) {\n                    // need more source.\n                    const tmpSourcePage = String(sourcePage).padStart(3, '0');\n                    try {\n                        const {data} = await axios.get(\n                            `${process.env.REACT_APP_TEST_BASEDIR}page-${tmpSourcePage}.json`\n                        );\n                        if (data.length > 0) {\n\n                            const newSource = source.concat(data);\n                            setSource(newSource);\n                            setContent(content.concat(newSource.slice((page-1)*perPage, page*perPage)));\n                            setSourcePage(sourcePage+1);\n                            setHasMore(true);\n                            // setPage(page+1);\n                        } else {\n                            setHasMore(false);\n                        }\n                    }catch(err) {\n                        if (source.length > content.length) {\n                            setContent(content.concat(source.slice((page-1)*perPage, page*perPage)));\n                        }\n                        setHasMore(false);\n                        console.log(err);\n                    }\n                } else {\n                    // if (content.length > 0) {\n                    //     if (content[content.length-1].slug === source[page*perPage-1].slug) {\n                    //         setHasMore(false);\n                    //         return;\n                    //     }\n                    // }\n                    const newData = source.slice((page-1)*perPage, page*perPage);\n                    setContent(content.concat(newData));\n                    if (newData.length < perPage) {\n                        setHasMore(false);\n                    } else {\n                        setHasMore(true);\n                    }\n                    // setPage(page+1);\n                }\n            }\n            \n        }\n    };\n\n    const searchAction = () => {\n        if (!db) {\n            console.log('db init failed.');\n            return;\n        }\n        if (searchText && searchText.length !== 0) {\n            const betterSearchText = '\"' + searchText.replace(' ', '\" \"') + '\"';\n            console.log(betterSearchText);\n            const tmpResult = db.search(betterSearchText).map((result) => result.item);\n            setContent([]);\n            setSource(tmpResult);\n            setSourcePage(0);\n            setPage(1);\n            if (page === 1) {\n                setManual(!manual);\n            }\n            if (tmpResult.length > 0) {\n                setHasMore(true);\n            }\n        } else {\n            setContent([]);\n            setPage(1);\n            setSource([]);\n            setSourcePage(0);\n            setHasMore(false);\n            if (page === 1) {\n                setManual(!manual);\n            }\n        }\n    };\n\n    useEffect(()=> {        \n        console.log('init config');\n        initConfig();\n    }, []);\n\n    useEffect(() => {\n        changePage();\n    }, [page, manual]);\n\n    return (\n    <div className=\"mContent\">\n      <MySearchBar \n        setSearchText={setSearchText} \n        searchAction={searchAction}\n      />\n      <div className=\"trending\">\n          <InfiniteScroll\n          dataLength={content.length}\n          next={moreContentClick}\n          hasMore={hasMore}\n          loader={<h4>~~~正在加载~~~</h4>}\n          endMessage = {<h4>~~~我们也是有底线的~~~</h4>}\n          style={{overflowX:\"hidden\"}}\n          >\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.slug}\n              slug={c.slug}\n              poster={c.cover}\n              title={c.title}\n              date={c.update_at}\n              duration={c.duration}\n              url={c.url}\n            />\n          ))}\n          </InfiniteScroll>\n        \n      </div>\n      {/* <div className=\"moreContentLink\">\n        <div className=\"linkText\" onClick={moreContentClick}>{moreText}</div>\n      </div> */}\n      {/* <KeyboardArrowUpIcon\n        className={classes.topBtn}\n        onClick={gotoTop}\n        /> */}\n    </div>\n    );\n}\n","import \"./mypage.css\"\n\nimport localStorage from \"localStorage\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\n\nexport default function Mypage() {\n\n    var videoHistory = localStorage.getItem(\"videoHistory\");\n    if (videoHistory) {\n        videoHistory = JSON.parse(videoHistory);\n    } else {\n        videoHistory = [];\n    }\n\n    return (\n        <div className=\"mypageContainer\">\n            <div className=\"mypageTitle\">\n                观看历史~~~\n            </div>\n            <div className=\"mypage\">\n                {videoHistory.length === 0 ? \"没有什么信息～～～\" : videoHistory.map((c) => (\n                    <SingleContent\n                    key={c.slug}\n                    slug={c.slug}\n                    poster={c.poster}\n                    title={c.title}\n                    date={c.date}\n                    duration={c.duration}\n                    url={c.url}\n                />\n                ))}\n            </div>\n        </div>\n    );\n}\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport SimpleBottomNavigation from \"./components/MainNav\";\nimport { Container } from \"@material-ui/core\";\nimport Playit from \"./Pages/Playit/Playit\";\nimport Home from \"./Pages/Home/Home\";\nimport Mypage from \"./Pages/Mypage/Mypage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className=\"app\">\n        <Container>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/play\" component={Playit} />\n            <Route path=\"/mine\" component={Mypage} />\n          </Switch>\n        </Container>\n      </div>\n      <SimpleBottomNavigation />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}