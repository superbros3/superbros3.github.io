{"version":3,"sources":["components/Header/Header.js","components/MainNav.js","components/Pagination/CustomPagination.js","components/SingleContent/SingleContent.js","Pages/Series/Series.js","Pages/Search/Search.js","Pages/Playit/Playit.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["Header","onClick","window","scroll","className","useStyles","makeStyles","root","width","position","bottom","backgroundColor","zIndex","SimpleBottomNavigation","classes","React","useState","value","setValue","history","useHistory","useEffect","push","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","style","color","label","icon","Videocam","darkTheme","createMuiTheme","palette","type","CustomPagination","setPage","numOfPages","display","justifyContent","marginTop","ThemeProvider","theme","Pagination","e","page","target","textContent","count","SingleContent","id","poster","title","date","duration","media_type","vote_average","url","backurl","theTime","parseInt","theTime1","theTime2","result","formatSeconds","dateStr","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","cursor","pathname","state","src","alt","Series","content","setContent","setNumOfPages","cdn","setCdn","setGoogldId","fetchSeries","a","pageFormatNum","axios","get","process","data","console","log","then","res","google_statistics_id","map","c","slug","cover","update_at","Search","searchText","setSearchText","db","setDb","primary","main","fetchSearch","searchResult","search","item","searchContent","v","resHash","sha1","utf8","encode","toString","initSearchJson","Fuse","TextField","flex","variant","Button","marginLeft","fontSize","toLocaleDateString","Playit","location","useLocation","isSafari","test","navigator","userAgent","to","height","controls","playsinline","config","file","forceHLS","forceVideo","App","Container","path","component","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","require","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c4215577.chunk.js","sourcesContent":["import \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <span onClick={() => window.scroll(0, 0)} className=\"header\">\n      🎬 网站 🎥\n    </span>\n  );\n};\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Videocam } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    position: \"fixed\",\n    bottom: 0,\n    backgroundColor: \"#2d313a\",\n    zIndex: 100,\n  },\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (value === 0) {\n      history.push(\"/\");\n    } else if (value === 1) {\n      history.push(\"/search\");\n    }\n  }, [value, history]);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label=\"视频\"\n        icon={<Videocam />}\n      />\n      <BottomNavigationAction\n        style={{ color: \"white\" }}\n        label=\"搜一搜\"\n        icon={<SearchIcon />}\n      />\n    </BottomNavigation>\n  );\n}\n","import React from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nexport default function CustomPagination({ setPage, numOfPages = 10 }) {\n  // Scroll to top when page changes\n  const handlePageChange = (page) => {\n    setPage(page);\n    window.scroll(0, 0);\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: 10,\n      }}\n    >\n      <ThemeProvider theme={darkTheme}>\n        <Pagination\n          onChange={(e) => handlePageChange(e.target.textContent)}\n          count={numOfPages}\n          color=\"primary\"\n        />\n      </ThemeProvider>\n    </div>\n  );\n}\n","import { Badge } from \"@material-ui/core\";\n\nimport \"./SingleContent.css\";\n\nimport { useHistory } from \"react-router\";\n\n\nconst SingleContent = ({\n  id,\n  poster,\n  title,\n  date,\n  media_type,\n  vote_average,\n  duration,\n  url,\n  backurl,\n}) => {\n  const history = useHistory();\n  const handlePlay = () =>{\n    history.push({\n      pathname: \"/play\",\n      state: {\"url\": url, \"backurl\": backurl}\n    });\n  };\n  function formatSeconds(value) {\n    var theTime = parseInt(value);// 秒\n    var theTime1 = 0;// 分\n    var theTime2 = 0;// 小时\n    if (theTime > 60) {\n        theTime1 = parseInt(theTime / 60);\n        theTime = parseInt(theTime % 60);\n        if (theTime1 > 60) {\n            theTime2 = parseInt(theTime1 / 60);\n            theTime1 = parseInt(theTime1 % 60);\n        }\n    }\n \n    var result = \"\" + parseInt(theTime);//秒\n    if (10 > theTime > 0) {\n        result = \"0\" + parseInt(theTime);//秒\n    } else {\n        result = \"\" + parseInt(theTime);//秒\n    }\n \n    if (10 > theTime1 > 0) {\n        result = \"0\" + parseInt(theTime1) + \":\" + result;//分，不足两位数，首位补充0，\n    } else {\n        result = \"\" + parseInt(theTime1) + \":\" + result;//分\n    }\n    if (theTime2 > 0) {\n        result = \"\" + parseInt(theTime2) + \":\" + result;//时\n    }\n    return result;\n  }\n  duration = formatSeconds(duration);\n  date  = new Date(date);\n  const dateStr = date.getFullYear()+\"-\"+String((date.getMonth()+1)).padStart(2, '0')+ \n    \"-\"+String(date.getDate()).padStart(2, '0')+\" \"+String(date.getHours()).padStart(2, '0')+\":\"+\n    String(date.getMinutes()).padStart(2, '0')+\":\"+String(date.getSeconds()).padStart(2, '0');\n  return (\n    <div\n        className=\"media\"\n        style={{ cursor: \"pointer\" }}\n        color=\"inherit\"\n        onClick={handlePlay}\n      >\n      <div className=\"imageBox\">\n        <img\n          className=\"poster\"\n          src={poster}\n          alt={title}\n        />\n        <span className=\"leftLogo\">x10096</span>\n        <span className=\"rightLogo\">HD</span>\n      </div>\n      <div className=\"videoTimeBox\">\n        <span className=\"videoTime\">{duration}</span>\n      </div>\n      \n      <b className=\"title\">{title}</b>\n      <span className=\"subTitle\">\n        <span className=\"subTitle\">添加时间：{dateStr}</span>\n      </span>\n    </div>\n  );\n};\n\nexport default SingleContent;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport \"./Series.css\";\n\nconst Series = () => {\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const [cdn, setCdn] = useState('');\n  const [googleId, setGoogldId] = useState('');\n\n  const fetchSeries = async () => {\n    const pageFormatNum = String(page-1).padStart(3, '0');\n    if (cdn !== '') {\n      try {\n        const {data} = await axios.get(\n          // `${cdn}page-${pageFormatNum}.json`\n          `${process.env.REACT_APP_TEST_BASEDIR}page-${pageFormatNum}.json`\n        );\n        setContent(data);\n        if (page+1 > numOfPages) {\n          setNumOfPages(page+1);\n        }\n      } catch(err) {\n        setContent([]);\n        console.log(err);\n      }\n      \n    } else {\n      await axios.get(\n        process.env.REACT_APP_CONFIG_URL\n      ).then( async function(res) {\n        setCdn(res.data.cdn);\n        setGoogldId(res.data.google_statistics_id);\n        try {\n          const { data } = await axios.get(\n            // `${res.data.cdn}page-${pageFormatNum}.json`\n            `${process.env.REACT_APP_TEST_BASEDIR}page-${pageFormatNum}.json`\n          );\n          setContent(data);\n          if (page+1 > numOfPages) {\n            setNumOfPages(page+1);\n          }\n        }catch(err) {\n          setContent([]);\n          console.log(err);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSeries();\n    // eslint-disable-next-line\n  }, [page]);\n\n  return (\n    <div className=\"mContent\">\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.slug}\n              id={c.slug}\n              poster={c.cover}\n              title={c.title}\n              date={c.update_at}\n              media_type=\"video\"\n              vote_average='9.0'\n              duration={c.duration}\n              url={c.url}\n              backurl=\"/\"\n            />\n          ))}\n      </div>\n      {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\n\nexport default Series;\n","import {\n  Button,\n  createMuiTheme,\n  TextField,\n  ThemeProvider,\n} from \"@material-ui/core\";\nimport \"./Search.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport Fuse from \"fuse.js\";\nimport sha1 from 'crypto-js/sha1';\nimport utf8 from 'utf8';\n\nconst Search = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState();\n  const [numOfPages, setNumOfPages] = useState(1);\n  const [cdn, setCdn] = useState('');\n  const [db, setDb] = useState();\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\",\n      },\n    },\n  });\n\n  const fetchSearch = async () => {\n    if (searchText === '') {\n      return;\n    }\n    const searchResult = db.search(searchText).map((result)=>result.item);\n    var searchContent = [];\n    for(const v of searchResult)  {\n      const resHash = sha1(utf8.encode(v)).toString();\n      console.log(resHash);\n      try {\n        const {data} = await axios.get(\n          // `${cdn}output/${resHash}`\n          `${process.env.REACT_APP_TEST_BASEDIR}output/${resHash}`\n        );\n        searchContent.push(data);\n      }catch(err) {\n        console.log(err);\n      }\n    }\n    setContent(searchContent);\n  };\n\n  const initSearchJson = async () => {\n    if (db) {\n      return;\n    }\n    if (cdn !== '') {\n      try {\n        const {data} = await axios.get(\n          // `${cdn}search.json`\n          `${process.env.REACT_APP_TEST_BASEDIR}search.json`\n        );\n        setDb(new Fuse(utf8.encode(data)));\n      } catch(err) {\n        setDb(new Fuse([]));\n        console.log(err);\n      }\n      \n    } else {\n      await axios.get(\n        process.env.REACT_APP_CONFIG_URL\n      ).then( async function(res) {\n        setCdn(res.data.cdn);\n        try {\n          const { data } = await axios.get(\n            // `${res.data.cdn}search.json`\n            `${process.env.REACT_APP_TEST_BASEDIR}search.json`\n          );\n          setDb(new Fuse(utf8.encode(data)));\n        }catch(err) {\n          setDb(new Fuse([]));\n          console.log(err);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    initSearchJson();\n    fetchSearch();\n    // eslint-disable-next-line\n  }, [page]);\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"search\">\n          <TextField\n            style={{ flex: 1 }}\n            className=\"searchBox\"\n            label=\"Search\"\n            variant=\"filled\"\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n          <Button\n            onClick={fetchSearch}\n            variant=\"contained\"\n            style={{ marginLeft: 10 }}\n          >\n            <SearchIcon fontSize=\"large\" />\n          </Button>\n        </div>\n      </ThemeProvider>\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <SingleContent\n              key={c.slug}\n              id={c.slug}\n              poster={c.cover}\n              title={c.title}\n              date={new Date(c.update_at).toLocaleDateString()}\n              media_type=\"video\"\n              vote_average='9.0'\n              duration={c.duration}\n              url={c.url}\n              backurl=\"/search\"\n            />\n          ))}\n      </div>\n      {numOfPages > 1 && (\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\"\nimport ReactPlayer from \"react-player\"\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./Playit.css\"\n\nconst Playit = () => {\n    const location = useLocation();\n    const url = location.state.url;\n    const backurl = location.state.backurl;\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n    return (\n        <div className=\"playerContent\">\n            <div className=\"buttonLine\">\n                <Link to={{pathname:backurl}}>&lt;&lt;返回</Link>\n            </div>\n            <ReactPlayer\n            className=\"react-player\"\n            url={url}\n            width='100%'\n            height='80%'\n            controls={true}\n            playsinline={true}\n            config={{\n                file: {\n                    forceHLS:!isSafari,\n                    forceVideo: true,\n                }\n            }}\n            />\n        </div>\n    );\n};\n\nexport default Playit;","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport SimpleBottomNavigation from \"./components/MainNav\";\nimport Series from \"./Pages/Series/Series\";\nimport Search from \"./Pages/Search/Search\";\nimport { Container } from \"@material-ui/core\";\nimport Playit from \"./Pages/Playit/Playit\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className=\"app\">\n        <Container>\n          <Switch>\n            <Route path=\"/\" component={Series} exact />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/play\" component={Playit} />\n          </Switch>\n        </Container>\n      </div>\n      <SimpleBottomNavigation />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nrequire(\"dotenv\").config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}